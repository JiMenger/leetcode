/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(!head||!head->next){return true;}
        
        ListNode *slow = head, *fast = head;
        
        while (fast->next && fast->next->next) {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        
        ListNode* newhead=NULL;
        ListNode *last = slow->next, *pre = head;
        while (last) {
            ListNode *tmp = last->next;
            last->next = newhead;
            newhead = last;
            last = tmp;
        }
        
        
        while(newhead){
            if(newhead->val!=pre->val){return false;}
            newhead= newhead->next;
            pre=pre->next;
        }
        
        return true;
        
        
        
    }
};
